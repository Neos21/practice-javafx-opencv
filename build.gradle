/* 
 * This file was generated by the Gradle 'init' task.
 * 
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_java_projects.html
 */

plugins {
  // Apply the java plugin to add support for Java
  id 'java'
  // Apply the application plugin to add support for building a CLI application.
  id 'application'
  // classpath を出力させて自動補完を効かせる
  id 'eclipse'
}

repositories {
  // Use jcenter for resolving dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
}

dependencies {
  // This dependency is used by the application.
  implementation 'com.google.guava:guava:28.2-jre'
  // JavaFX
  compile files("${System.properties['java.home']}/lib/ext/jfxrt.jar")
  // JAR
  compile fileTree(dir: 'lib', include: '*.jar')
}

run {
  // For Windows : Set OpenCV Native Library Path
  if(org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    systemProperty "java.library.path", file("C:\\PATH\\TO\\opencv\\build\\java\\x64").absolutePath
  }
}

sourceSets {
  main {
    java {
      srcDir 'src'
    }
    // src/main/java/ 配下に置いた FXML などのリソースファイル群をビルド後の class ファイルと同一階層に配置できるようにする
    resources {
      srcDir 'src/main/java'
    }
    java.outputDir = file('bin')
    output.resourcesDir = file('bin')
  }
}

tasks.withType(JavaCompile) {
  // For Windows : Set Character Encoding
  options.encoding = 'UTF-8'
}

mainClassName = 'practice.javafx.opencv.App'

application {
  // Define the main class for the application.
  mainClassName = mainClassName
}

jar {
  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
  manifest {
    attributes 'Main-Class': mainClassName
  }
}
